version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: adbot-postgres
    environment:
      POSTGRES_DB: adbot_dev
      POSTGRES_USER: adbot
      POSTGRES_PASSWORD: ${DB_PASSWORD:-adbot_password}
    ports:
      - "1030:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - adbot-network

  redis:
    image: redis:7-alpine
    container_name: adbot-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    networks:
      - adbot-network

  mlflow:
    image: python:3.11-slim
    container_name: adbot-mlflow
    working_dir: /app
    environment:
      MLFLOW_BACKEND_STORE_URI: postgresql://adbot:${DB_PASSWORD:-adbot_password}@postgres:5432/adbot_dev
      MLFLOW_DEFAULT_ARTIFACT_ROOT: /app/mlruns
    ports:
      - "5000:5000"
    command: >
      bash -c "
        pip install mlflow psycopg2-binary &&
        mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri postgresql://adbot:${DB_PASSWORD:-adbot_password}@postgres:5432/adbot_dev --default-artifact-root /app/mlruns
      "
    volumes:
      - mlflow_artifacts:/app/mlruns
    depends_on:
      - postgres
    networks:
      - adbot-network

  prometheus:
    image: prom/prometheus:latest
    container_name: adbot-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - adbot-network

  grafana:
    image: grafana/grafana:latest
    container_name: adbot-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: ${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./configs/grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    networks:
      - adbot-network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: adbot-kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
    depends_on:
      - zookeeper
    networks:
      - adbot-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: adbot-zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - adbot-network

  adbot-api:
    build:
      context: .
      dockerfile: docker/Dockerfile
    container_name: adbot-api
    ports:
      - "8080:8080"
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: adbot_dev
      DB_USER: adbot
      DB_PASSWORD: ${DB_PASSWORD:-adbot_password}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis_password}
      MLFLOW_TRACKING_URI: http://mlflow:5000
    volumes:
      - ./src:/app/src
      - ./configs:/app/configs
    depends_on:
      - postgres
      - redis
      - mlflow
    networks:
      - adbot-network
    restart: unless-stopped

  adbot-worker:
    build:
      context: .
      dockerfile: docker/Dockerfile.worker
    container_name: adbot-worker
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: adbot_dev
      DB_USER: adbot
      DB_PASSWORD: ${DB_PASSWORD:-adbot_password}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_PASSWORD: ${REDIS_PASSWORD:-redis_password}
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    volumes:
      - ./src:/app/src
      - ./configs:/app/configs
    depends_on:
      - postgres
      - redis
      - kafka
    networks:
      - adbot-network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  mlflow_artifacts:
  prometheus_data:
  grafana_data:

networks:
  adbot-network:
    driver: bridge