[build-system]
requires = ["setuptools>=68.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "adbot"
version = "0.1.0"
description = "AI-Powered Advertising Optimization Platform using Reinforcement Learning"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "AdLab, LLC", email = "support@adlab.ai"},
]
maintainers = [
    {name = "AdLab, LLC", email = "support@adlab.ai"},
]
keywords = [
    "reinforcement-learning",
    "advertising",
    "optimization",
    "machine-learning",
    "marketing",
    "ai",
    "bayesian-optimization",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "stable-baselines3>=2.1.0",
    "d3rlpy>=2.0.0",
    "gymnasium>=0.29.0",
    "torch>=2.0.0",
    "fastapi>=0.103.0",
    "pydantic>=2.4.0",
    "sqlalchemy>=2.0.0",
    "redis>=5.0.0",
    "optuna>=3.3.0",
    "transformers>=4.34.0",
    "mlflow>=2.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.9.0",
    "flake8>=6.1.0",
    "mypy>=1.5.0",
    "isort>=5.12.0",
    "pre-commit>=3.4.0",
]

docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.23.0",
]

all = [
    "adbot[dev,docs]",
]

[project.urls]
Homepage = "https://github.com/adlab/adbot"
Documentation = "https://docs.adbot.ai"
Repository = "https://github.com/adlab/adbot"
Issues = "https://github.com/adlab/adbot/issues"

[project.scripts]
adbot = "adbot.cli:main"

[tool.setuptools]
package-dir = {"" = "src"}
packages = {find = {where = ["src"]}}

[tool.setuptools.package-data]
adbot = ["py.typed"]

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88
skip_gitignore = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "transformers.*",
    "stable_baselines3.*",
    "d3rlpy.*",
    "optuna.*",
    "mlflow.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.4"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=src/adbot",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
pythonpath = ["src"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/adbot"]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = true

[tool.coverage.paths]
source = [
    "src/adbot",
    "*/site-packages/adbot",
]

[tool.ruff]
target-version = "py311"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long (handled by black)
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "W191",  # indentation contains tabs
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.ruff.isort]
known-third-party = ["fastapi", "pydantic", "starlette"]